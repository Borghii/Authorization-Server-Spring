server:
  port: 9000

logging:
  level:
    org.springframework.security: trace

    spring:
      security:
        oauth2:
          authorizationserver:
            issuer: http://auth-server:9000

spring:
  security:
    user:
      name: user #Solo Ãºtil para pruebas. No se recomienda en producciÃ³n porque no usa cifrado.
      password: password # --------------------------------------------------------------------
    oauth2:
      authorizationserver:
        client:
          oidc-client:
            registration:
              client-id: "oidc-client" # DATOS QUE NECESITA LE CLIENTE PARA ACCEDER AL AUTH SERVER
              client-secret: "{noop}secret" # DATOS QUE NECESITA LE CLIENTE PARA ACCEDER AL AUTH SERVER
              client-authentication-methods:
                - "client_secret_basic" # client_secret_basic â†’ El cliente envÃ­a su client-id y client-secret en la cabecera Authorization (Basic Auth). ðŸ“Œ Existen otros mÃ©todos como client_secret_post, donde se envÃ­a en el body.
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
              redirect-uris:
                - "http://127.0.0.1:8080/login/oauth2/code/oidc-client"
              post-logout-redirect-uris:
                - "http://127.0.0.1:8080/"
              scopes:
                - "openid"
                - "profile"
            require-authorization-consent: true